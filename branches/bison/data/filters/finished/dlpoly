# DL_POLY Configuration Import / Export (for v1.1+)
# Created:	 25/03/2009
# Last modified: 10/04/2009
# ChangeLog:

filter(type="importmodel", name="DL_POLY Configuration", extension="CONFIG,REVCON,config,revcon", glob="*CON*",exact="CONFIG,REVCON,config,revcon",nickname="dlpoly",id=2)
{
	# Variable Declaration
	string e, title;
	int n,keytrj,imcon;
	double ax,ay,az,bx,by,bz,cx,cy,cz;
	double rx,ry,rz,vx,vy,vz,fx,fy,fz;

	# Title section
	getline(title);
	newmodel(title);
	readline(keytrj,imcon);

	# Cell (if present)
	if (imcon != 0)
	{
		readline(ax,ay,az);
		readline(bx,by,bz);
		readline(cx,cy,cz);
		cellaxes(ax,ay,az,bx,by,bz,cx,cy,cz);
	}

	# Atoms
	while (!eof())
	{
		readline(e);
		readline(rx,ry,rz);
		newatom(e,rx,ry,rz);
		if (keytrj > 0)
		{
			readline(vx,vy,vz);
			setvelocities(vx,vy,vz);
		}
		if (keytrj > 1)
		{
			readline(fx,fy,fz);
			setforces(fx,fy,fz);
		}
	}
	rebond();
	fold();
	finalisemodel();
}

filter(type="exportmodel", name="DL_POLY Configuration", extension="CONFIG,REVCON,config,revcon", glob="*CON*", exact="CONFIG,REVCON,config,revcon", nickname="dlpoly", id=2)
{
	# Variable Declaration
	int n,imcon;
	atom i;

	# Get current model
	model m = aten.model;

	# Title section
	writeline(m.name);

	# Convert celltype string to DL_POLY-style integer
	if (m.cell.type == "none") imcon = 0;
	else if (m.cell.type == "cubic") imcon = 1;
	else if (m.cell.type == "orthorhombic") imcon = 2;
	else if (m.cell.type == "parallelepiped") imcon = 3;
	writelinef("%10i%10i\n",0,imcon);

	# Cell (if present) 
	if (imcon <> 0)
	{
		writelinef("%20.12f%20.12f%20.12f\n",m.cell.ax, m.cell.ay, m.cell.az);
		writelinef("%20.12f%20.12f%20.12f\n",m.cell.bx, m.cell.by, m.cell.bz);
		writelinef("%20.12f%20.12f%20.12f\n",m.cell.cx, m.cell.cy, m.cell.cz);
	}

	# Atoms
	for (n = 1; n <= m.natoms; ++n)
	{
		# Get variable pointer to make manipulation a little less cluttered
		i = m.atoms[n];
		if (i.type == 0) writelinef("%-8s%10i%20f\n",i.symbol,i.id,i.mass);
		else writelinef("%-8s%10i%20f\n",i.type.name,i.id,i.mass);
		writelinef("%20.14f%20.14f%20.14f\n",i.rx,i.ry,i.rz);
	}
}

