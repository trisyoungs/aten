<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
	"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"
	[
	<!ENTITY % MATHML.prefixed "INCLUDE">
	<!ENTITY % MATHML.prefix "mml">
	<!ENTITY % equation.content "(alt?, (graphic+|mediaobject+|mml:math))">
	<!ENTITY % inlineequation.content "(alt?, (inlinegraphic+|inlinemediaobject+|mml:math))">
	<!ENTITY % mathml PUBLIC "-//W3C//DTD MathML 2.0//EN" "http://www.w3.org/Math/DTD/mathml2/mathml2.dtd">
	%mathml;

	<!--Getting Started-->
	<!ENTITY usage SYSTEM "gettingstarted/usage.xml">
	<!ENTITY compilation SYSTEM "gettingstarted/compilation.xml">
	<!ENTITY installation SYSTEM "gettingstarted/installation.xml">
	<!ENTITY reference SYSTEM "gettingstarted/reference.xml">
	<!ENTITY cli SYSTEM "gettingstarted/cli.xml">
	<!--Import / Export-->
	<!ENTITY supportedformats SYSTEM "importexport/supportedformats.xml">
	<!ENTITY filters SYSTEM "importexport/filters.xml">
	<!ENTITY trajectories SYSTEM "importexport/trajectories.xml">
	<!ENTITY readwrite SYSTEM "importexport/readwrite.xml">
	<!-- GUI -->
	<!ENTITY gui SYSTEM "gui/gui.xml">
	<!ENTITY guimouse SYSTEM "gui/mouse.xml">
	<!ENTITY guitoolbars SYSTEM "gui/toolbars.xml">
	<!ENTITY guiwinatomlist SYSTEM "gui/windows_atomlist.xml">
	<!ENTITY guiwinbuild SYSTEM "gui/windows_build.xml">
	<!ENTITY guiwincelldefine SYSTEM "gui/windows_celldefine.xml">
	<!ENTITY guiwincelledit SYSTEM "gui/windows_celledit.xml">
	<!ENTITY guiwincommand SYSTEM "gui/windows_command.xml">
	<!ENTITY guiwindisorder SYSTEM "gui/windows_disorder.xml">
	<!ENTITY guiwinff SYSTEM "gui/windows_ff.xml">
	<!ENTITY guiwinfragment SYSTEM "gui/windows_fragment.xml">
	<!ENTITY guiwingeometry SYSTEM "gui/windows_geometry.xml">
	<!ENTITY guiwingrids SYSTEM "gui/windows_grids.xml">
	<!ENTITY guiwinminimiser SYSTEM "gui/windows_minimiser.xml">
	<!ENTITY guiwinposition SYSTEM "gui/windows_position.xml">
	<!ENTITY guiwintransform SYSTEM "gui/windows_transform.xml">
	<!--Commands-->
	<!ENTITY commandoverview SYSTEM "commands/commandoverview.xml">
	<!ENTITY typesaten SYSTEM "commands/types_aten.xml">
	<!ENTITY typesatom SYSTEM "commands/types_atom.xml">
	<!ENTITY typesbond SYSTEM "commands/types_bond.xml">
	<!ENTITY typesbound SYSTEM "commands/types_bound.xml">
	<!ENTITY typeselement SYSTEM "commands/types_element.xml">
	<!ENTITY typesffatom SYSTEM "commands/types_ffatom.xml">
	<!ENTITY typesffbound SYSTEM "commands/types_ffbound.xml">
	<!ENTITY typesforcefield SYSTEM "commands/types_forcefield.xml">
	<!ENTITY typesglyph SYSTEM "commands/types_glyph.xml">
	<!ENTITY typesglyphdata SYSTEM "commands/types_glyphdata.xml">
	<!ENTITY typesmeasurement SYSTEM "commands/types_measurement.xml">
	<!ENTITY typesmodel SYSTEM "commands/types_model.xml">
	<!ENTITY typespattern SYSTEM "commands/types_pattern.xml">
	<!ENTITY typespreferences SYSTEM "commands/types_preferences.xml">
	<!ENTITY typesregion SYSTEM "commands/types_region.xml">
	<!ENTITY typesunitcell SYSTEM "commands/types_unitcell.xml">
	<!ENTITY typesvector SYSTEM "commands/types_vector.xml">
	<!ENTITY commandatom SYSTEM "commands/atom.xml">
	<!ENTITY commandbond SYSTEM "commands/bond.xml">
	<!ENTITY commandbuilding SYSTEM "commands/building.xml">
	<!ENTITY commandcell SYSTEM "commands/cell.xml">
	<!ENTITY commandcharge SYSTEM "commands/charge.xml">
	<!ENTITY commandcolourscale SYSTEM "commands/colourscale.xml">
	<!ENTITY commanddisordered SYSTEM "commands/disordered.xml">
	<!ENTITY commandedit SYSTEM "commands/edit.xml">
	<!ENTITY commandenergy SYSTEM "commands/energy.xml">
	<!ENTITY commandflow SYSTEM "commands/flow.xml">
	<!ENTITY commandforcefield SYSTEM "commands/forcefield.xml">
	<!ENTITY commandforce SYSTEM "commands/force.xml">
	<!ENTITY commandglyph SYSTEM "commands/glyph.xml">
	<!ENTITY commandgrid SYSTEM "commands/grid.xml">
	<!ENTITY commandimage SYSTEM "commands/image.xml">
	<!ENTITY commandlabel SYSTEM "commands/label.xml">
	<!ENTITY commandmath SYSTEM "commands/math.xml">
	<!ENTITY commandmeasure SYSTEM "commands/measure.xml">
	<!ENTITY commandmessaging SYSTEM "commands/messaging.xml">
	<!ENTITY commandminimiser SYSTEM "commands/minimiser.xml">
	<!ENTITY commandmodel SYSTEM "commands/model.xml">
	<!ENTITY commandmontecarlo SYSTEM "commands/montecarlo.xml">
	<!ENTITY commandpattern SYSTEM "commands/pattern.xml">
	<!ENTITY commandreadwrite SYSTEM "commands/readwrite.xml">
	<!ENTITY commandscript SYSTEM "commands/script.xml">
	<!ENTITY commandselect SYSTEM "commands/select.xml">
	<!ENTITY commandsite SYSTEM "commands/site.xml">
	<!ENTITY commandstring SYSTEM "commands/string.xml">
	<!ENTITY commandsystem SYSTEM "commands/system.xml">
	<!ENTITY commandtrajectory SYSTEM "commands/trajectory.xml">
	<!ENTITY commandtransform SYSTEM "commands/transform.xml">
	<!ENTITY commandview SYSTEM "commands/view.xml">
	<!-- Topics of Interest -->
	<!ENTITY topicscolourscales SYSTEM "topics/colourscales.xml">
	<!ENTITY topicspatterns SYSTEM "topics/patterns.xml">
	<!-- Forcefields -->
	<!ENTITY fffiles SYSTEM "ff/files.xml">
	<!ENTITY ffsupplied SYSTEM "ff/supplied.xml">
	<!ENTITY ffkeywords SYSTEM "ff/keywords.xml">
	<!ENTITY ffrules SYSTEM "ff/rules.xml">
	<!ENTITY fftyping SYSTEM "ff/typing.xml">
	<!ENTITY ffneta SYSTEM "ff/neta.xml">
	<!ENTITY ffformsvdw SYSTEM "ff/forms-vdw.xml">
	<!ENTITY ffformsbond SYSTEM "ff/forms-bond.xml">
	<!ENTITY ffformsangle SYSTEM "ff/forms-angle.xml">
	<!ENTITY ffformstorsion SYSTEM "ff/forms-torsion.xml">
	<!-- Methods -->
	<!ENTITY methodneta SYSTEM "methods/neta.xml">
	<!ENTITY methodaugment SYSTEM "methods/augment.xml">
	<!ENTITY methodautoellipsoids SYSTEM "methods/autoellipsoids.xml">
	<!ENTITY methodautopolyhedra SYSTEM "methods/autopolyhedra.xml">
	<!ENTITY methodrebond SYSTEM "methods/rebond.xml">
	<!ENTITY methodliterature SYSTEM "methods/literature.xml">
	<!-- Enums -->
	<!ENTITY bondtypes SYSTEM "enums/bondtypes.xml">
	<!ENTITY celltypes SYSTEM "enums/celltypes.xml">
	<!ENTITY colourschemes SYSTEM "enums/colourschemes.xml">
	<!ENTITY combinationrules SYSTEM "enums/combinationrules.xml">
	<!ENTITY drawstyles SYSTEM "enums/drawstyles.xml">
	<!ENTITY energyunits SYSTEM "enums/energyunits.xml">
	<!ENTITY glyphtypes SYSTEM "enums/glyphtypes.xml">
	<!ENTITY gridstyles SYSTEM "enums/gridstyles.xml">
	<!ENTITY gridtypes SYSTEM "enums/gridtypes.xml">
	<!ENTITY labeltypes SYSTEM "enums/labeltypes.xml">
	<!ENTITY outputtypes SYSTEM "enums/outputtypes.xml">
	<!ENTITY parseoptions SYSTEM "enums/parseoptions.xml">
	<!ENTITY readsuccess SYSTEM "enums/readsuccess.xml">
	<!ENTITY regionshapes SYSTEM "enums/regionshapes.xml">
	<!ENTITY viewobjects SYSTEM "enums/viewobjects.xml">
	<!ENTITY zmaptypes SYSTEM "enums/zmaptypes.xml">
	<!-- Changelogs -->
	<!ENTITY changelog11 SYSTEM "changelogs/changelog1.1.xml">
	<!ENTITY changelog12 SYSTEM "changelogs/changelog1.2.xml">
	<!ENTITY changelog13 SYSTEM "changelogs/changelog1.3.xml">
]>

<book>
	<bookinfo>
	<title>Aten vATENVERSION (rATENREVISION)</title>
	<subtitle>User Manual</subtitle>
	<author>
		<firstname>Tristan</firstname>
		<surname>Youngs</surname>
	</author>
	</bookinfo>
	
	<!-- DISCLAIMER -->
	<chapter id="disclaimer"><title>Disclaimer</title>
	<para>Aten comes with ABSOLUTELY NO WARRANTY.</para>
	<para>This is free software, and you are welcome to redistribute it under certain conditions. For more details read the GPL at [http://www.gnu.org/copyleft/gpl.html].</para>
	<para>Aten is under continual development and tweaking. If you have a feature suggestion, a feature request, or have found a bug or an idiosyncrasy, please contact me at <email>tris@projectaten.net</email>.</para>
	<para>Aten uses Space Group Info (c) 1994-96 Ralf W. Grosse-Kunstleve, the Qt toolkit (C) Trolltech, and the readline library.</para>
	<para>Some general notes:</para>
	<itemizedlist mark="opencircle">
		<listitem>
			<para>First off, if you find that Aten doesn't support the format you want, consider writing a <link linkend="readwrite.filters">filter</link> to do so. And if you need help, please ask!</para>
		</listitem>
		<listitem>
			<para>More so, if you find that Aten <emphasis>does</emphasis> support the format you want, but doesn't appear to write it out correctly, please let me know.</para>
		</listitem>
		<listitem>
			<para>For forcefield expression files written with Aten, I recommend that you check that the correct atom types get assigned to your molecule(s). Blind trust that this has actually occurred should only be employed once you are confident that the forcefield types are consistently correct! Larger forcefields, e.g. OPLS-AA by Jorgensen et al., do not have a complete set of type descriptions implemented in Aten. Once more, if your add some in, please send them to me so they can be included in a future revision of the code.</para>
		</listitem>
	</itemizedlist>
	<para><ulink url="mailto:tris@projectaten.net">tris@projectaten.net</ulink></para>
	</chapter>

	<!-- ACKNOWLEDGEMENTS -->
	<chapter id="acknowledgements"><title>Acknowledgements</title>
		<para>Aten is maintained entirely by T. Youngs. However, many people have contributed useful thoughts, ideas, bugfixes, and motivation to the project over its lifetime. These people are, in no particular order:</para>
		
		<para>A. K. Croft and crew (Mac afficionado, supreme fault-finder)</para>
		<para>S. Cromie (algebraic guidance)</para>
		<para>A. Elena (bug-finder extraordinaire, 'pathological case'-locator, Windows / Mac building and packaging)</para>
		<para>D. Pashov (Windows / Mac building and packaging)</para>
		<para>S. Norman (icon judgment)</para>
		
	</chapter>	
	
	<!-- GETTING STARTED -->
	<chapter id="gettingstarted"><title>Getting Started</title>
		&usage;
		&compilation;
		&installation;
		&reference;
		&cli;
	</chapter>

	<!-- IMPORT / EXPORT -->
	<chapter id="importexport"><title>Import / Export</title>
		<indexterm zone="importexport"><primary>import/export</primary></indexterm>
		&supportedformats;
		&filters;
		&trajectories;
		&readwrite;
	</chapter>
	
	<!-- GUI -->
	<chapter id="gui"><title>The GUI</title>
		<indexterm zone="gui"><primary>GUI</primary></indexterm>
		<section>
			<para>Aside from a powerful command-line tool, Aten has a GUI which is able to control must of the functionality available within the code. It is written in a style similar to other editing programs - at its simplest it is just a visualiser, but models can also be created and edited interactively.</para>
		</section>
 		&gui;
 		&guimouse;
		&guitoolbars;
		<section id="gui.toolwindows"><title>Tool Windows</title>
			<indexterm zone="gui"><primary>GUI</primary><secondary>tool windows</secondary></indexterm>
			<para>Most of Aten's functions in the GUI are accessed through the various tool windows. These can be shown/hidden through the toggle buttons in the <link linkend="gui.toolbars.stack">Tool Stack</link> toolbar, which appears on the right-hand side of the main canvas by default.</para>
			&guiwinatomlist;
			&guiwinbuild;
			&guiwincelldefine;
			&guiwincelledit;
			&guiwincommand;
			&guiwindisorder;
			&guiwinff;
			&guiwinfragment;
			&guiwingeometry;
			&guiwingrids;
			&guiwinminimiser;
			&guiwinposition;
			&guiwintransform;
		</section>
	</chapter>

	<!-- Command Language -->
	<chapter id="command"><title>Command Language</title>
 		&commandoverview; 
		<section id="command.types"><title>Variable Types</title>
			<indexterm zone="command.types"><primary>variables</primary><secondary>types</secondary></indexterm>

			<section id="command.types.overview"><title>Overview</title>
				<indexterm zone="command.types.overview"><primary>variables</primary><secondary>types</secondary><tertiary>overview</tertiary></indexterm>
	
				<para>For variables in Aten that are of reference type (i.e. the non-standard types) various sub-variables and functions may be accessed in the same way class members are utilised in C++. Each non-standard variable type is listed here along with the types and descriptions of their available subvariables / members.</para>
	
				<para>In the same way that class members are accessed in C/C++, subvariables of reference types are accessed by use of the full stops '.' between member names. For instance, the <link linkend="command.types.atom">atom</link> type allows all the information of a given atom to be accessed. The following example illustrates the process of retrieving the third atom in the current model, finding its coordinates, and subsequently adjusting them:</para>
	
				<synopsis>
atom a = aten.model.atoms[3];
vector v = a.r;
printf(&quot;Old coordinates are: %f %f %f\n&quot;, v.x, v.y, v.z);
v.x += 4.0;
a.r = v;
printf(&quot;New coordinates are: %f %f %f\n&quot;, a.rx, a.ry, a.rz);
				</synopsis>
	
				<para>Lots of paths are used here. Firstly, the global <link linkend="command.types.aten">aten</link> variable is used to get access to the current model and grab a reference to its third atom (aten.model.atoms[3]). Then, the coordinates of this atom are placed in a vector <emphasis>v</emphasis> by requesting the <emphasis>r</emphasis> subvariable from the stored <link linkend="command.types.atom">atom</link> reference. We then adjust the vector and store the new coordinates in the atom.</para>
	
				<para>All subvariables can be read, but not all can be written back to - these are read-only subvariables, and are indicated with 'ro' in the <emphasis>Access</emphasis> column in the following tables.</para>
	
				<para>Function members act in the same as subvariable members except that they take one or more arguments enclosed in parentheses immediately following the member name, just as command functions do.</para>

			</section>
	
			&typesaten;
			&typesatom;
			&typesbond;
			&typesbound;
			&typeselement;
			&typesffatom;
			&typesffbound;
			&typesforcefield;
			&typesglyph;
			&typesglyphdata;
			&typesmeasurement;
			&typesmodel;
			&typespattern;
			&typespreferences;
			&typesregion;
			&typesunitcell;
			&typesvector;
		</section>
		<section id="command.ref"><title>Command Reference</title>
			&commandatom;
			&commandbond;
			&commandbuilding;
			&commandcell;
			&commandcharge;
			&commandcolourscale;
			&commanddisordered;
			&commandedit;
			&commandenergy;
			&commandflow;
			&commandforcefield;
			&commandforce;
			&commandglyph;
			&commandgrid;
			&commandimage;
			&commandlabel;
			&commandmath;
			&commandmeasure;
			&commandmessaging;
			&commandminimiser;
			&commandmodel;
			&commandmontecarlo;
			&commandpattern;
			&commandreadwrite;
			&commandscript;
			&commandselect;
			&commandsite;
			&commandstring;
			&commandsystem;
			&commandtrajectory;
			&commandtransform;
			&commandview;
		</section>
	</chapter>

	<!-- Topics of Interest -->
	<chapter id="topics"><title>Topics of Interest</title>
		&topicscolourscales;
		&topicspatterns;
	</chapter>

	<!-- Forcefields -->
	<chapter id="ff"><title>Forcefields and Typing</title>
		&fffiles;
		&ffsupplied;
		&ffkeywords;
		&ffrules;
		&fftyping;
		&ffneta;
		&ffformsvdw;
		&ffformsbond;
		&ffformsangle;
		&ffformstorsion;
	</chapter>

	<!-- Methods -->
	<chapter id="methods"><title>Methods</title>
		
		<para>Some things in Aten are implemented from existing routines and algorithms. Some have been written from scratch, even when existing algorithms were available, either as an attempt to improve those existing algorithms or simply to learn more by working out how best to go about solving a given problem. A selection of algorithms are detailed in the following pages, grouped into those that were re-used from the literature, and those that were written specifically for Aten.</para>
		
		<para>It should be pointed out that, in the eventuality that somebody notices that one of Aten's 'custom' algorithms is actually a reproduction of an existing method, then fair enough - send me the reference and I'll be happy to move it to the 'literature' section.</para>
		
		<section><title>Custom Algorithms</title>
			&methodneta;
			&methodaugment;
			&methodautoellipsoids;
			&methodautopolyhedra;
			&methodrebond;
		</section>
 		&methodliterature; 
	</chapter>
	
	<!-- Enums -->
	<chapter id="enums"><title>Enumerations</title>
		<para>The following tables list sets of keywords relevant to various data (e.g. bond types), to be used when setting or checking such values.</para>
		&bondtypes;
		&celltypes;
		&colourschemes;
		&combinationrules;
		&drawstyles;
		&energyunits;
		&glyphtypes;
		&gridstyles;
		&gridtypes;
		&labeltypes;
		&outputtypes;
		&parseoptions;
		&readsuccess;
		&regionshapes;
		&viewobjects;
		&zmaptypes;
	</chapter>

	<!-- Changelogs -->
	<chapter id="changelogs"><title>Changelogs</title>
		&changelog11;
		&changelog12;
		&changelog13;
	</chapter>

	<!-- Index -->
	<index/>

</book>

