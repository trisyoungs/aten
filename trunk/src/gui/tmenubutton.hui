/*
	*** TMenuButton - QToolButton with custom handling of mousepress/release events
	*** src/gui/tmenubutton.hui
	Copyright T. Youngs 2007-2012

	This file is part of Aten.

	Aten is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	Aten is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with Aten.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef ATEN_TMENUBUTTON_H
#define ATEN_TMENUBUTTON_H

#include <QtWidgets/QToolButton>
#include <QMouseEvent>
#include <QTimer>

// Forward Declarations
class TMenuButton;

// Popup Widget for TMenuButton
class TMenuButtonPopupWidget : public QWidget
{
	Q_OBJECT

	private:
	// Parent TMenuButton
	TMenuButton* parentMenuButton_;

	protected:
	// Whether widget is refreshing
	bool refreshing_;

	public:
	// Constructor
	TMenuButtonPopupWidget(TMenuButton* parent);
	// Show popup, updating any controls as necessary beforehand
	virtual void popup() = 0;


	/*
	 * Virtual Reimplementations
	 */
	protected:
	void hideEvent(QHideEvent* event);
};

// Menu button with optional drop-down (popup) menu
class TMenuButton : public QToolButton
{
	Q_OBJECT
	
	public:
	// Constructor
	TMenuButton(QWidget* parent = 0);


	/*
	 * Widget for popup
	 */
	private:
	// Popup widget
	TMenuButtonPopupWidget* popupWidget_;
	// Whether popup is instant when button is pressed
	bool instantPopup_;
	// Timer for popup window
	QTimer popupTimer_;
	// Whether button was already checked before being pressed
	bool checkedBeforePressed_;

	public:
	// Set popup widget for button
	void setPopupWidget(TMenuButtonPopupWidget* widget, bool instantPopup = false);
	// Return popup widget set for button
	TMenuButtonPopupWidget* popupWidget();
	// Notify button that popup is done
	void popupDone();

	protected:
	void paintEvent(QPaintEvent* event);

	private slots:
	void popup();
	void buttonPressed();
	void buttonReleased();
};

#endif

