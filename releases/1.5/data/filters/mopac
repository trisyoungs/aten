# Mopac input file (for v1.2+)
# Created:	 13/04/2009
# Last modified: 07/12/2009
# ChangeLog:
#	07/12/2009 - Fixed (uncommented) 'newatom' line in importmodel filter, which had been taken out for some reason. Tweaked '+' and '&' detection.
# Notes:
#   Cartesian coordinate format is assumed

filter(type="importmodel", name="Mopac Control File", nickname="mopac", extension="mop", glob="*.mop", id=4)
{
	# Variable declaration
	int natoms,n,cellcount = 0,fx,fy,fz,ntitle=2, morekeywords, lesstitle;
	string e,line,title;
	double rx,ry,rz;
	vector v[3];

	# Discard keyword lines.
	# A '+' in a line indicates that another line of keywords will follow.
	# A '&' in a line indicates that a title/description line is replaced by keywords.
	while (getline(line))
	{
		if (contains(line,"&") == 0) { ntitle--; continue; }
		if (contains(line,"+") != 0) continue;	# Read another line of keywords
		break;
	}

	# Description lines follow, unless replaced by keyword lines with '&' in previous lines
	title = "Mopac Input";
	if (ntitle > 0) getline(title);
	if (ntitle > 1)	getline(line);
	newmodel(title);

	# All remaining lines make up the geometry
	while (!eof())
	{
		readline(e,rx,fx,ry,fy,rz,fy);
		# If the element is 'Tv' its part of the cell specification
		if (e == "Tv")
		{
			++cellcount;
			if (cellcount < 4)
			{
				v[cellcount].x = rx;
				v[cellcount].y = ry;
				v[cellcount].z = rz;
			}
			else printf("Extra translation vector data found - ignored...\n");
		}
		else newatom(e,rx,ry,rz);
	}

	# Were we supplied with a full cell description?
	if (cellcount >= 3) cellaxes(v[1].x,v[1].y,v[1].z,v[2].x,v[2].y,v[2].z,v[3].x,v[3].y,v[3].z);

	rebond();
	finalisemodel();
}

filter(type="exportmodel", name="Mopac Control File", nickname="mopac", extension="mop", glob="*.mop", id=4)
{
	# Variable declaration
	int n,f;
	string e;
	double rx,ry,rz;
	atom i;
	model m = aten.frame;

	writeline("PM6 BFGS");
	writeline(m.name);
	writeline("Coordinates churned out by Aten.");
	for (i = m.atoms; i != 0; ++i)
	{
		f = 1 - i.fixed;
		writelinef("%3s %12.6f %1i %12.6f %1i %12.6f %1i\n", i.symbol, i.rx, f, i.ry, f, i.rz, f);
	}

	# Write translation vector for cell
	if (m.cell.type <> "none")
	{
		writelinef("Tv  %12.6f 0 %12.6f 0 %12.6f 0\n",m.cell.ax,m.cell.ay,m.cell.az);
		writelinef("Tv  %12.6f 0 %12.6f 0 %12.6f 0\n",m.cell.bx,m.cell.by,m.cell.bz);
		writelinef("Tv  %12.6f 0 %12.6f 0 %12.6f 0\n",m.cell.cx,m.cell.cy,m.cell.cz);
	}
}

filter(type="importmodel", name="Mopac Archive File", nickname="mopacarc", extension="arc", glob="*.arc", id=99)
{
	# Variable declaration
	int natoms,n,cellcount = 0,fx,fy,fz,ntitle=2, morekeywords, lesstitle;
	string e,line,title;
	double rx,ry,rz;
	vector v[3];

	# Search for geometry data in file...
	if (find("FINAL GEOMETRY OBTAINED") == 0) error("No geometry found in file.");

	# Discard keyword lines.
	# A '+' in a line indicates that another line of keywords will follow.
	# A '&' in a line indicates that a title/description line is replaced by keywords.
	while (getline(line))
	{
		if (contains(line,"&") == 0) { ntitle--; continue; }
		if (contains(line,"+") != 0) continue;	# Read another line of keywords
		break;
	}

	# Description lines follow, unless replaced by keyword lines with '&' in previous lines
	title = "Mopac Archive";
	if (ntitle > 0) getline(title);
	if (ntitle > 1)	getline(line);
	newmodel(title);

	# All remaining lines make up the geometry
	while (!eof())
	{
		readline(e,rx,fx,ry,fy,rz,fy);
		# If the element is 'Tv' its part of the cell specification
		if (e == "Tv")
		{
			++cellcount;
			if (cellcount < 4)
			{
				v[cellcount].x = rx;
				v[cellcount].y = ry;
				v[cellcount].z = rz;
			}
			else printf("Extra translation vector data found - ignored...\n");
		}
		else newatom(e,rx,ry,rz);
	}

	# Were we supplied with a full cell description?
	if (cellcount >= 3) cellaxes(v[1].x,v[1].y,v[1].z,v[2].x,v[2].y,v[2].z,v[3].x,v[3].y,v[3].z);

	rebond();
	finalisemodel();
}
