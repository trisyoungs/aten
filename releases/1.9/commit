#!/bin/bash

# Script to 'wrap' around svn and update ChangeLog and version / date in file.

COMMITFILE="none"
COMMITMSG="none"
COMMITTYPE="none"
TEST="false"
UPDATE="false"
TRUNK=""

# Parse CLI arguments / options
USAGE1="commit [-F <filename>] [-m <text>] [-t]"

while getopts "F:m:tu" options; do
  case $options in
    F ) COMMITFILE=$OPTARG
	COMMITTYPE="file"
        echo "Using file "$COMMITFILE" for commit message.";;
    m ) COMMITMSG=$OPTARG
	COMMITTYPE="msg"
        echo "Using supplied text for commit message.";;
    t ) TEST="true"
	echo "Test only - no file changes will be made.";;
    u ) UPDATE="true"
	echo "Local source will be updated before commit.";;
    \? ) echo -e $USAGE1
         exit 1;;
    * ) echo -e $USAGE1
        exit 1;;
  esac
done

# Check that a commit type was given
if [ "$COMMITTYPE" = "none" ] && [ "$TEST" = "false" ]
then
  echo "No commit message/file was given."
  exit 0
fi

# Update if requested
if [ "$UPDATE" = "true" ]
then
  svn update
fi

# Determine whether beta (trunk) version or other (i.e. release) version
if `svn info | grep -q trunk`
then
  echo "Committing to trunk - version number and revision will be changed."
  TRUNK="true"
else
  echo "Not committing to trunk - only revision will be changed."
  TRUNK="false"
fi

# Determine current svn version number and increase it by one.
OLDREV=`svn info -r HEAD | grep Revision | sed "s/Revision: \([0-9]*\)/\1/g"`
let REVISION=OLDREV+1
# Check for failed svn command
if [ "$REVISION" = "1" ]
then
  echo "Failed."
  exit 1
fi
echo "Current version is revision $OLDREV - committed version will be revision $REVISION..."

# Determine svn URL
URL=`svn info | grep URL | sed -e "s/URL: \(.*\)/\1/g" -e "s/https/http/g"`
echo "Subversion repository is: "$URL

# Get current date and time
DATE=`date "+%a %d %b - %H:%M"`

# Change URL revision information
echo "Setting revision information..."

if [ "$TEST" = "false" ]
then
  if [ "$TRUNK" = "true"  ]
  then
    # Committing to trunk - get major and minor revision from SVN revision number
    MAJOR=$(( REVISION/1000 ))
    MINOR=$(( REVISION%1000 ))
    ./changeversion $MAJOR $MINOR $REVISION
  else
    # Committing to branch - change only revision number in src/main/version.h
    sed -i -e "s/#define TENREVISION \"[0-9\.]\+\(.*\)\"/#define ATENREVISION \"$REVISION\"\1/g" src/main/version.h
    echo -n "       version.h (Program Version) : "
    grep '#define ATENVERSION' src/main/version.h | sed -e 's/#define ATENVERSION "\([0-9a-z\.]\+\).*"/\1/g'
    echo -n "       version.h (SVN Revision)    : "
    grep '#define ATENREVISION' src/main/version.h | sed -e 's/#define ATENREVISION "\([0-9a-z\.]\+\).*"/\1/g'
  fi
else
  ./changeversion
fi

# Update ChangeLog
#TODO

# If this was just a test we're done at this point
if [ "$TEST" = "true" ]
then
  exit 0
fi

# Commit changes
if [ "$COMMITTYPE" = "file" ]
then
  svn commit -F $COMMITFILE
fi
if [ "$COMMITTYPE" = "msg" ]
then
  svn commit -m "$COMMITMSG"
fi

exit 0
