# Aten 'Custom' file format (for v1.2+)
# Created:	 14/05/2009
# Last modified: 14/05/2009
# ChangeLog:

filter(type="importmodel",name="Aten Keyword Format", nickname="akf", extension="akf", glob="*.akf", id=1)
{
	# Variable declaration
	int n,i,j,k,l;
	string e,keywd,line;
	double rx,ry,rz, lengths[3], angs[3], q;

	newmodel(filterfilename());

	# Read line
	while (!eof())
	{
		readlinef("%s %r",keywd,line);
		if (keywd == "atom")
		{
			readvar(line,i,e,rx,ry,rz,q);
			newatom(e,rx,ry,rz);
			setcharge(q);
		}
		else if (keywd == "bond")
		{
			readvar(line,i,j,e);
			newbond(i,j,e);
		}
		else if (keywd == "cell")
		{
			readvar(line,lengths[1],lengths[2],lengths[3],angs[1],angs[2],angs[3]);
			cell(lengths[1],lengths[2],lengths[3],angs[1],angs[2],angs[3]);
		}
		else if (keywd == "arrow")
		{
			readvar(line,i,j);
			newglyph("arrow");
			glyphatomr(1,i);
			glyphatomr(2,j);
		}
		else if (keywd == "vector")
		{
			readvar(line,i,j);
			newglyph("vector");
			glyphatomr(1,i);
			glyphatomr(2,j);
		}
		else if (keywd == "sphere")
		{
			readvar(line,i,rx,ry,rz);
			newglyph("sphere");
			glyphatomr(1,i);
			glyphdata(2,rx,ry,rz);
		}
		else if (keywd == "cube")
		{
			readvar(line,i,j);
			newglyph("cube");
			glyphatomr(1,i);
			glyphdata(2,rx,ry,rz);
		}
		else if (keywd == "tet")
		{
			readvar(line,i,j,k);
			newglyph("tetrahedron");
			glyphatomr(1,i);
			glyphatomr(2,j);
			glyphatomr(3,k);
		}
		else if (keywd == "geometry")
		{
			readvar(line,n,i,j,k,l);
			if (n == 2) measure(i,j);
			else if (n == 3) measure(i,j,k);
			else if (n == 4) measure(i,j,k,l);
			else printf("Warning: Invalid measurement between %i atoms.\n", n);
		}
		else printf("Warning: Keyword '%s' not recognised.\n",keywd);
	}
	finalisemodel();
}

filter(type="exportmodel", name="Aten Keyword Format", nickname="akf", extension="akf", glob="*.akf", id=1)
{
	model m = aten.frame;

	// Atom data
	for (atom i = m.atoms; i; ++i) writelinef("atom   %i %s %f %f %f %f\n", i.id, i.symbol, i.rx, i.ry, i.rz, i.q);

	// Bond data
	for (bond b = m.bonds; b; ++b) writelinef("bond   %i %i %s\n", b.i.id, b.j.id, b.type);

	// Cell data
	if (m.cell.type != "none") writelinef("cell   %f %f %f %f %f %f\n", m.cell.a, m.cell.b, m.cell.c, m.cell.alpha, m.cell.beta, m.cell.gamma);

	// Measurements
	for (measurement g = m.distances; g; ++g) writelinef("geometry 2 %i %i\n", g.i.id, g.j.id);
	for (measurement g = m.angles; g; ++g) writelinef("geometry 3 %i %i %i\n", g.i.id, g.j.id, g.k.id);
	for (measurement g = m.torsions; g; ++g) writelinef("geometry 4 %i %i %i %i\n", g.i.id, g.j.id, g.k.id, g.l.id);
}
